if game:GetService("CoreGui"):FindFirstChild("\77\117\114\100\101\114\101\114\32\118\115\32\83\104\101\114\114\105\102\32\124\124\32\77\101\108\111\110\32\72\117\98") then game:GetService("CoreGui"):FindFirstChild("\77\117\114\100\101\114\101\114\32\118\115\32\83\104\101\114\114\105\102\32\124\124\32\77\101\108\111\110\32\72\117\98"):Destroy() end
local a = game.Players.LocalPlayer
local b = game:GetService("Players")
local c = game.ReplicatedStorage.Remotes.StartRoundCountdown
local d = game.ReplicatedStorage.Match.OnMatchStarted
local e = game.ReplicatedStorage.Remotes.OnMatchFinished
local f = game:GetService("ReplicatedStorage").Map.StartMapVoting
local g = {}
local h = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\83\116\101\102\97\110\117\107\49\50\47\86\101\110\121\120\45\85\73\45\76\105\98\114\97\114\121\47\109\97\105\110\47\115\111\117\114\99\101\50\46\108\117\97"))()
local i = game:GetService("Workspace"):FindFirstChild("\76\111\98\98\121"):FindFirstChild("\67\108\97\115\115\105\99\83\116\97\110\100\115")
_G.AutoFarm = false
_G.GameMode = "1v1"
_G.InMatch = false
_G.TeleportOffsetMin = 1
_G.TeleportOffsetMax = 3
_G.HitboxSize = 13
_G.EnemyHighlight = Color3.new(100,0,0)
_G.TeamHighlight = Color3.new(0,0,100)
_G.HitboxEnabled = false
local j = h.new({title = "\77\117\114\100\101\114\101\114\32\118\115\32\83\104\101\114\114\105\102\32\124\124\32\77\101\108\111\110\32\72\117\98"})
local k = j:addPage({title = "\65\117\116\111\32\70\97\114\109"})
local l = j:addPage({title = "\82\97\103\101"})
local m = j:addPage({title = "\67\114\101\100\105\116\115"})
local n = k:addSection({title = "\65\117\116\111\32\70\97\114\109\32\40\69\78\65\66\76\69\32\72\73\84\66\79\88\32\65\78\68\32\83\69\84\32\83\73\90\69\32\84\79\32\49\51\41"})
local o = l:addSection({title = "\82\97\103\101\32\75\105\108\108"})
local p = l:addSection({title = "\69\83\80"})
local q = l:addSection({title = "\72\105\116\98\111\120\101\115"})
local r = l:addSection({title = "\65\70\75"})
local s = m:addSection({title = "\83\99\114\105\112\116\32\68\101\118\101\108\111\112\101\114"})
local t = m:addSection({title = "\85\73\32\76\105\98\114\97\114\121"})
s:addButton({title = "@officiallymelon"})
t:addButton({title = "\86\101\110\121\120\32\45\32\103\105\116\104\117\98\46\99\111\109\47\83\116\101\102\97\110\117\107\49\50\47\86\101\110\121\120\45\85\73\45\76\105\98\114\97\114\121"})

function u(v)
  if v then
    local w = Instance.new("\72\105\103\104\108\105\103\104\116")
    w.Parent = v
    if b[v.Name].Team ~= a.Team then
      w.FillColor = _G.EnemyHighlight
      w.OutlineColor = _G.EnemyHighlight
    else
      w.FillColor = _G.TeamHighlight
      w.OutlineColor = _G.TeamHighlight
    end
  end
end

local x = {"1v1", "2v2", "3v3", "4v4"}
local y = {["1v1"] = 1, ["2v2"] = 2, ["3v3"] = 3, ["4v4"] = 4}

local function z(A, B)
  for _, C in ipairs(A:GetDescendants()) do
    if C.Name == B then
      return C
    end
  end
end

local function D()
  local E = z(a.Backpack, "\84\104\114\111\119\83\111\117\110\100")
  if E then
    E = E.Parent.Parent
  else
    E = z(a.Character, "\84\104\114\111\119\83\111\117\110\100")
    if E then
      E = E.Parent.Parent
    end
  end
  if E and E.Parent.Name == "Backpack" then
    E.Parent = a.Character
  end
  return E
end

local function F(G, H, I)
  local J
  local K = math.random(H, I) * (math.random(0, 1) == 0 and -1 or 1)
  local L = math.random(H, I) * (math.random(0, 1) == 0 and -1 or 1)
  local M = math.random(H, I) * (math.random(0, 1) == 0 and -1 or 1)
  J = G + Vector3.new(K, L, M)
  wait(0.05)
  a.Character.HumanoidRootPart.CFrame = CFrame.new(J)
end

local function N()
  local O = a.Team
  print("\75\105\108\108\105\110\103\32\65\108\108")
  g = {}
  for _, P in pairs(game.Workspace:GetChildren()) do
    if P:FindFirstChildOfClass("\72\117\109\97\110\111\105\100") then
      local Q = game.Players:FindFirstChild(P.Name)
      if Q and Q.Team ~= O then
        table.insert(g, Q)
        print(Q.Name)
      end
    end
  end
  for _, R in pairs(g) do
    if R.Character and R.Character:FindFirstChild("\72\117\109\97\110\111\105\100") and R.Team ~= a.Team and R ~= a then
      print(R.Character.Name)
      local S = D()
      print("\107\110\105\102\101")
      local T = R.Character.Humanoid
      local v = R.Character
      repeat
        if T.Health > 10 then
          v.HumanoidRootPart.Size = Vector3.new(13, 13, 13)
          F(v.HumanoidRootPart.Position, _G.TeleportOffsetMin, _G.TeleportOffsetMax)
          if S then
            S:Activate()
          else
            print("\84\111\111\108\32\110\111\116\32\102\111\117\110\100\32\111\114\32\110\111\116\32\101\113\117\105\112\112\101\100")
          end
          wait(0.05)
        end
      until T.Health <= 10 or not T.Parent or game.Players.LocalPlayer.Character.Humanoid.Health < 1
      print(R.Name, "\104\101\97\108\116\104\58", T.Health)
    else
      print("\69\110\101\109\121\32\112\108\97\121\101\114\32\111\114\32\104\117\109\97\110\111\105\100\32\110\111\116\32\102\111\117\110\100\32\102\111\114\58", R.Name)
    end
  end
end

local function U(V)
  for _, W in pairs(V:GetChildren()) do
    if W:IsA("\79\98\106\101\99\116\86\97\108\117\101") then
      if not W.Value or (W.Value and W.Value.Name == a.Name) then
        return true
      end
    end
  end
  return false
end

local function X(Y, Z)
  for _, _ in pairs(Z:GetChildren()) do
    if _.Name == "\77\97\116\99\104\67\111\110\116\97\105\110\101\114" then
      for _, a0 in pairs(_:GetChildren()) do
        if a0.Name == "\83\116\97\110\100" then
          local a1 = 0
          for _, a2 in ipairs(a0:GetChildren()) do
            if a2:IsA("\79\98\106\101\99\116\86\97\108\117\101") then
              a1 = a1 + 1
            end
          end
          if a1 == y[Y] then
            if U(a0) then
              return a0
            end
          end
        end
      end
    end
  end
end

local function a3()
  if not _G.InMatch then
    print("\106\111\105\110\105\110\103\32\108\111\98\98\121")
    local a4 = X(_G.GameMode, i)
    if a4 then
      a.Character.HumanoidRootPart.CFrame = a4.CFrame + Vector3.new(0, 3, 0)
      print("\77\111\118\101\100\32\116\111\32\83\116\97\110\100")
    else
      print("\78\111\32\115\117\105\116\97\98\108\101\32\115\116\97\110\100\32\102\111\117\110\100\32\102\111\114\32\103\97\109\101\32\109\111\100\101\58", _G.GameMode)
    end
  end
end

n:addToggle({title = "\65\117\116\111\32\70\97\114\109", callback = function(value)
  _G.AutoFarm = value
  print("\65\117\116\111\32\70\97\114\109", value)
  if value then
    while _G.AutoFarm do
      wait(0.2)
      if not _G.InMatch then
        a3()
        wait(1)
      end
    end
  end
end})

q:addToggle({title = "\76\97\114\103\101\114\32\72\105\116\98\111\120", callback = function(value)
  if value then
    _G.HitboxEnabled = true
  else
    _G.HitboxEnabled = false
  end
end})

r:addButton({title = "\68\105\115\97\98\108\101\32\65\70\75\32\75\105\99\107", callback = function()
  local a5 = game:service'\86\105\114\116\117\97\108\85\115\101\114'
  game:service'\80\108\97\121\101\114\115'.LocalPlayer.Idled:connect(function()
    a5:CaptureController()
    a5:ClickButton2(Vector2.new())
  end)
end})

p:addToggle({title = "\67\104\97\114\97\99\116\101\114\32\69\83\80", callback = function(value)
  if value then
    for _, player in ipairs(b:GetPlayers()) do
      u(player.Character)
      player.CharacterAdded:Connect(u)
    end
  else
    for _, player in ipairs(b:GetPlayers()) do
      if player.Character:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") then
        for _, v in player.Character.HumanoidRootPart:GetChildren() do
          if v:IsA("\72\105\103\104\108\105\103\104\116") then
            v:Destroy()
          end
        end
      end
    end
  end
end})

p:addColorPicker({title = "\80\108\97\121\101\114\32\69\83\80\32\67\111\108\111\114", default = _G.TeamHighlight, callback = function(color)
  _G.TeamHighlight = color
end})

p:addColorPicker({title = "\69\110\101\109\121\32\69\83\80\32\67\111\108\111\114", default = _G.EnemyHighlight, callback = function(color)
  _G.EnemyHighlight = color
end})

n:addDropdown({title = "\71\97\109\101\32\77\111\100\101", list = x, callback = function(value)
  _G.GameMode = value
  print("\83\101\108\101\99\116\101\100\32\71\97\109\101\32\77\111\100\101\58", value)
end})

o:addKeybind({title = "\75\105\108\108\32\65\108\108", key = Enum.KeyCode.K, callback = function()
  N()
end})

n:addSlider({title = "\77\105\110\105\109\117\109\32\79\102\102\115\101\116", default = 1, min = 1, max = 6, callback = function(value)
  _G.TeleportOffsetMin = value
end})

n:addSlider({title = "\77\97\120\105\109\117\109\32\79\102\102\115\101\116", default = 3, min = 1, max = 6, callback = function(value)
  _G.TeleportOffsetMax = value
end})

q:addSlider({title = "\72\105\116\98\111\120\32\83\105\122\101", default = 13, min = 3, max = 18, callback = function(value)
  _G.HitboxSize = value
end})

local a6 = game:GetService("Players").LocalPlayer.PlayerGui.RoundCountdown.CountdownFrame.Frame.Number
a6:GetPropertyChangedSignal("\84\101\120\116"):Connect(function()
  if tonumber(a6.Text) <= 1 and _G.AutoFarm then
    N()
  end
end)

e.OnClientEvent:Connect(function()
  if _G.AutoFarm then
    _G.InMatch = false
    a3()
  end
end)

f.OnClientEvent:Connect(function()
  if not _G.InMatch and _G.AutoFarm then
    _G.InMatch = true
  end
end)

game:GetService('\82\117\110\83\101\114\118\105\99\101').RenderStepped:connect(function()
  for i,v in next, game:GetService('\80\108\97\121\101\114\115'):GetPlayers() do
    if v.Name ~= game:GetService('\80\108\97\121\101\114\115').LocalPlayer.Name then
      pcall(function()
        if _G.HitboxEnabled then
          v.Character.HumanoidRootPart.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
          v.Character.HumanoidRootPart.Transparency = 0.99
        else
          v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
          v.Character.HumanoidRootPart.Transparency = 0.99
        end
      end)
    end
  end
end)

print("\115\99\114\105\112\116\32\108\111\97\100\101\100")

j:SelectPage({page = j.pages[1], toggle = true})
